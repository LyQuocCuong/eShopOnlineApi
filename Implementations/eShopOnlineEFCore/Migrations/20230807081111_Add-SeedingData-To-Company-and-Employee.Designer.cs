// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eShopOnlineEFCore.Context;

#nullable disable

namespace eShopOnlineEFCore.Migrations
{
    [DbContext(typeof(ShopOnlineContext))]
    [Migration("20230807081111_Add-SeedingData-To-Company-and-Employee")]
    partial class AddSeedingDataToCompanyandEmployee
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domains.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("CreatedDateUtcZero")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(2);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("UpdatedDateUtcZero")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.ToTable("Company", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Address = "",
                            CreatedDateUtcZero = new DateTime(2023, 10, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "LQC Company",
                            Phone = "1234567890",
                            UpdatedDateUtcZero = new DateTime(2023, 10, 27, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("Domains.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(5);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("CreatedDateUtcZero")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(8);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(4);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("UpdatedDateUtcZero")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9);

                    b.HasKey("Id");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("Domains.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(6);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("CreatedDateUtcZero")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(5);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("UpdatedDateUtcZero")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("WorkingStoreId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("WorkingStoreId");

                    b.ToTable("Employee", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000101"),
                            Code = "ADMIN101",
                            CreatedDateUtcZero = new DateTime(2023, 10, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Henry",
                            IsDeleted = false,
                            LastName = "Admin",
                            Phone = "0949995598",
                            UpdatedDateUtcZero = new DateTime(2023, 10, 27, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("Domains.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("CreatedDateUtcZero")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(4);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("UpdatedDateUtcZero")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("Domains.Entities.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(6);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("CreatedDateUtcZero")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnOrder(8);

                    b.Property<Guid?>("ManagerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(5);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("UpdatedDateUtcZero")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(10);

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ManagerId")
                        .IsUnique()
                        .HasFilter("[ManagerId] IS NOT NULL");

                    b.ToTable("Store", (string)null);
                });

            modelBuilder.Entity("Domains.Entities.Employee", b =>
                {
                    b.HasOne("Domains.Entities.Store", "WorkingStore")
                        .WithMany("EmployeesList")
                        .HasForeignKey("WorkingStoreId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("WorkingStore");
                });

            modelBuilder.Entity("Domains.Entities.Store", b =>
                {
                    b.HasOne("Domains.Entities.Company", "Company")
                        .WithMany("Stores")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domains.Entities.Employee", "Manager")
                        .WithOne("ManagingStore")
                        .HasForeignKey("Domains.Entities.Store", "ManagerId");

                    b.Navigation("Company");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Domains.Entities.Company", b =>
                {
                    b.Navigation("Stores");
                });

            modelBuilder.Entity("Domains.Entities.Employee", b =>
                {
                    b.Navigation("ManagingStore");
                });

            modelBuilder.Entity("Domains.Entities.Store", b =>
                {
                    b.Navigation("EmployeesList");
                });
#pragma warning restore 612, 618
        }
    }
}
